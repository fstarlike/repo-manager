!function(){"use strict";const{__:t}=wp.i18n;class e{constructor(){this.currentRepo=null,this.currentBranch=null,this.repositories=[],this.isLoading=!1,this.notificationQueue=[],this.isProcessingNotifications=!1,this.isPanelOpen=!1,this.shownStatusNotifications=new Set,this.sessionDismissals=new Set,this.isInitializing=!0,this.notificationDismissals=this.loadNotificationDismissals(),this.init()}init(){this.bindEvents(),this.loadRepositories(),this.startPolling(),this.cleanupExpiredDismissals()}bindEvents(){const t=document.getElementById("repo-manager-floating-trigger");t&&t.addEventListener("click",()=>this.togglePanel());const e=document.getElementById("repo-manager-panel-close");e&&e.addEventListener("click",()=>this.closePanel()),document.addEventListener("click",t=>{t.target.closest("#repo-manager-floating-widget")||this.closePanel()});const n=document.getElementById("repo-manager-repo-select");n&&n.addEventListener("change",t=>{this.selectRepository(t.target.value)});const i=document.getElementById("repo-manager-fetch-btn"),o=document.getElementById("repo-manager-pull-btn"),a=document.getElementById("repo-manager-push-btn"),s=(document.getElementById("repo-manager-branch-select"),document.getElementById("repo-manager-branch-checkout-btn"));i&&i.addEventListener("click",()=>this.fetchRepository()),o&&o.addEventListener("click",()=>this.pullRepository()),a&&a.addEventListener("click",()=>this.pushRepository()),s&&s.addEventListener("click",()=>this.checkoutSelectedBranch()),document.addEventListener("click",t=>{if(t.target.closest(".repo-manager-notification-close")){const e=t.target.closest(".repo-manager-notification");if(e){const t=e.dataset.notificationKey;if(t&&(t.startsWith("status-")||t.startsWith("background-status")))if(t.includes("::")){const n=t.split("::");if(4===n.length){n[1];const t=n[2],i=n[3];this.showDismissalOptionsPopup(e,t,i)}else this.removeNotification(e)}else{const n=t.startsWith("background-status-")?t.substring(18):t.substring(7),i=n.lastIndexOf("-");if(-1!==i){const t=n.substring(i+1),o=n.substring(0,i),a=o.indexOf("-");if(-1!==a){const n=o.substring(a+1);this.showDismissalOptionsPopup(e,n,t)}else this.removeNotification(e)}else this.removeNotification(e)}else this.removeNotification(e)}}}),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.isPanelOpen&&this.closePanel()})}togglePanel(){this.isPanelOpen?this.closePanel():this.openPanel()}openPanel(){const t=document.getElementById("repo-manager-floating-panel");t&&(t.classList.add("active"),this.isPanelOpen=!0,setTimeout(()=>{const t=document.getElementById("repo-manager-repo-select");t&&t.focus()},100))}closePanel(){const t=document.getElementById("repo-manager-floating-panel");t&&(t.classList.remove("active"),this.isPanelOpen=!1)}async loadRepositories(){try{this.showLoading();const t=await this.makeAjaxRequest("git_manager_get_repos",{});if(t.success&&t.data){if(this.repositories=t.data,this.populateRepositorySelect(),this.repositories.length>0){const t=this.repositories[0];this.selectRepository(t.id);const e=document.getElementById("repo-manager-repo-select");e&&(e.value=t.id)}this.repositories.length>0&&(this.isInitializing=!1,this.checkAllRepositoriesForUpdates())}}catch(e){this.showError(t("Failed to load repositories","repo-manager"))}finally{this.hideLoading()}}populateRepositorySelect(){const t=document.getElementById("repo-manager-repo-select");if(t){for(;t.children.length>1;)t.removeChild(t.lastChild);this.repositories.forEach(e=>{const n=document.createElement("option");n.value=e.id,n.textContent=e.name||e.path.split("/").pop(),t.appendChild(n)})}}async selectRepository(e){if(e){if(this.currentRepo=this.repositories.find(t=>t.id===e),this.currentRepo)try{this.showLoading(),await this.updateRepositoryStatusSilent();const t=await this.makeAjaxRequest("git_manager_get_branches",{id:e});if(t.success&&t.data){const{branches:e=[],activeBranch:n=""}=t.data,i=Array.isArray(e)?e.filter(Boolean):[];this.currentBranch=n||i[0]||"",this.populateBranchDropdown(i,this.currentBranch),this.updateBranchInfo()}}catch(e){this.showError(t("Failed to load repository information","repo-manager"))}finally{this.hideLoading()}}else this.hideBranchInfo()}populateBranchDropdown(t,e){const n=document.getElementById("repo-manager-branch-select");if(n){for(;n.children.length>1;)n.removeChild(n.lastChild);t.forEach(t=>{const i=document.createElement("option");i.value=t,i.textContent=t,t===e&&(i.selected=!0),n.appendChild(i)}),!n.value&&t.length>0&&(n.value=t[0])}}async checkoutSelectedBranch(){if(!this.currentRepo)return;const e=document.getElementById("repo-manager-branch-select");if(!e||!e.value)return;const n=e.value;try{this.showLoading();const e=await this.makeAjaxRequest("git_manager_checkout",{id:this.currentRepo.id,branch:n});if(e.success){this.currentBranch=n,this.updateBranchInfo(),await this.updateRepositoryStatus(),this.showSuccess(`${this.currentRepo.name||""}: ${t("Switched to","repo-manager")} ${n}`);try{localStorage.setItem("git_manager_last_checkout",String(Date.now()))}catch(t){}}else this.showError(e.data||t("Checkout failed","repo-manager"))}catch(e){this.showError(e?.message||t("Checkout error","repo-manager"))}finally{this.hideLoading()}}updateBranchInfo(){const t=document.getElementById("repo-manager-current-branch-name"),e=document.getElementById("repo-manager-branch-section"),n=document.getElementById("repo-manager-empty-state");t&&this.currentBranch&&(t.textContent=this.currentBranch,e&&(e.style.display="block"),n&&(n.style.display="none"))}async updateRepositoryStatus(){if(this.currentRepo)try{const t=await this.makeAjaxRequest("git_manager_bulk_repo_status",{});t.success&&t.data&&t.data[this.currentRepo.id]&&this.updateStatusIndicator(t.data[this.currentRepo.id])}catch(t){}}async updateRepositoryStatusSilent(){if(this.currentRepo)try{const t=await this.makeAjaxRequest("git_manager_bulk_repo_status",{});t.success&&t.data&&t.data[this.currentRepo.id]&&this.updateStatusIndicatorSilent(t.data[this.currentRepo.id])}catch(t){}}updateStatusIndicator(e){const n=document.getElementById("repo-manager-status-dot"),i=document.getElementById("repo-manager-status-text"),o=document.getElementById("repo-manager-trigger-status");if(!n||!i)return;let a=0,s=0,r=!1;"string"==typeof e?e.split("\n").forEach(t=>{if((t=t.trim()).startsWith("##")){if(t.includes("behind")){const e=t.match(/behind (\d+)/);e&&(a=parseInt(e[1]))}if(t.includes("ahead")){const e=t.match(/ahead (\d+)/);e&&(s=parseInt(e[1]))}}else t&&(r=!0)}):"object"==typeof e&&(a=e.behind||0,s=e.ahead||0,r=e.hasChanges||!1),n.classList.remove("behind","ahead","diverged","clean"),o&&o.classList.remove("status-behind","status-ahead","status-diverged","status-clean");let c="clean",l=t("Up to date","repo-manager");a>0?(c="behind",l=t("Behind remote","repo-manager")):s>0?(c="ahead",l=t("Ahead of remote","repo-manager")):a>0&&s>0&&(c="diverged",l=t("Diverged","repo-manager")),n.classList.add(c),i.textContent=l,o&&o.classList.add(`status-${c}`)}updateStatusIndicatorSilent(e){const n=document.getElementById("repo-manager-status-dot"),i=document.getElementById("repo-manager-status-text"),o=document.getElementById("repo-manager-trigger-status");if(!n||!i)return;let a=0,s=0,r=!1;"string"==typeof e?e.split("\n").forEach(t=>{if((t=t.trim()).startsWith("##")){if(t.includes("behind")){const e=t.match(/behind (\d+)/);e&&(a=parseInt(e[1]))}if(t.includes("ahead")){const e=t.match(/ahead (\d+)/);e&&(s=parseInt(e[1]))}}else t&&(r=!0)}):"object"==typeof e&&(a=e.behind||0,s=e.ahead||0,r=e.hasChanges||!1),n.classList.remove("behind","ahead","diverged","clean"),o&&o.classList.remove("status-behind","status-ahead","status-diverged","status-clean");let c="clean",l=t("Up to date","repo-manager");a>0?(c="behind",l=t("Behind remote","repo-manager")):s>0?(c="ahead",l=t("Ahead of remote","repo-manager")):a>0&&s>0&&(c="diverged",l=t("Diverged","repo-manager")),n.classList.add(c),i.textContent=l,o&&o.classList.add(`status-${c}`),"clean"===c&&this.currentRepo&&this.clearStatusNotification(this.currentRepo.id)}clearStatusNotification(t=null){const e=t||(this.currentRepo?this.currentRepo.id:null);e&&document.querySelectorAll(".repo-manager-notification").forEach(t=>{const n=t.dataset.notificationKey;n&&(n.startsWith(`status-${e}-`)||n.startsWith(`background-status-${e}-`)||n.startsWith(`background-status::${e}::`))&&this.removeNotification(t)})}async fetchRepository(){if(this.currentRepo&&!this.isLoading)try{this.isLoading=!0,this.disableButtons();const e=await this.makeAjaxRequest("git_manager_fetch",{id:this.currentRepo.id});e.success?(this.showSuccess(`${this.currentRepo.name}: ${t("Repository fetched successfully","repo-manager")}`),await this.updateRepositoryStatus(),this.clearStatusNotification(this.currentRepo.id)):this.showError(`${this.currentRepo.name}: ${e.data?.message||e.data||t("Fetch failed","repo-manager")}`)}catch(e){this.showError(`${this.currentRepo.name}: ${t("Fetch operation failed","repo-manager")}`)}finally{this.isLoading=!1,this.enableButtons()}}async pullRepository(){if(this.currentRepo&&!this.isLoading)try{this.isLoading=!0,this.disableButtons();const e=await this.makeAjaxRequest("git_manager_repo_git",{id:this.currentRepo.id,op:"pull"});e.success?(this.showSuccess(`${this.currentRepo.name}: ${t("Repository pulled successfully","repo-manager")}`),await this.updateRepositoryStatus(),this.clearStatusNotification(this.currentRepo.id)):this.showError(`${this.currentRepo.name}: ${e.data?.message||e.data||t("Pull failed","repo-manager")}`)}catch(e){this.showError(`${this.currentRepo.name}: ${t("Pull operation failed","repo-manager")}`)}finally{this.isLoading=!1,this.enableButtons()}}async pushRepository(){if(this.currentRepo&&!this.isLoading)try{this.isLoading=!0,this.disableButtons();const e=await this.makeAjaxRequest("git_manager_repo_git",{id:this.currentRepo.id,op:"push"});e.success?(this.showSuccess(`${this.currentRepo.name}: ${t("Repository pushed successfully","repo-manager")}`),await this.updateRepositoryStatus(),this.clearStatusNotification(this.currentRepo.id)):this.showError(`${this.currentRepo.name}: ${e.data?.message||e.data||t("Push failed","repo-manager")}`)}catch(e){this.showError(`${this.currentRepo.name}: ${t("Push operation failed","repo-manager")}`)}finally{this.isLoading=!1,this.enableButtons()}}hideBranchInfo(){const t=document.getElementById("repo-manager-branch-section"),e=document.getElementById("repo-manager-empty-state");t&&(t.style.display="none"),e&&(e.style.display="block")}showLoading(){const t=document.getElementById("repo-manager-loading-state"),e=document.getElementById("repo-manager-branch-section"),n=document.getElementById("repo-manager-empty-state");t&&(t.style.display="flex"),e&&(e.style.display="none"),n&&(n.style.display="none")}hideLoading(){const t=document.getElementById("repo-manager-loading-state");t&&(t.style.display="none")}disableButtons(){document.querySelectorAll(".repo-manager-action-btn").forEach(t=>t.disabled=!0)}enableButtons(){document.querySelectorAll(".repo-manager-action-btn").forEach(t=>t.disabled=!1)}showSuccess(t){this.showNotification(t,"success")}showError(t){this.showNotification(t,"error")}showNotification(t,e="info",n={}){if(!this.areNotificationsEnabled())return;const i={id:Date.now()+Math.random(),message:t,type:e,data:n,timestamp:Date.now()};this.notificationQueue.push(i),this.processNotificationQueue()}async processNotificationQueue(){if(!this.isProcessingNotifications&&0!==this.notificationQueue.length){for(this.isProcessingNotifications=!0;this.notificationQueue.length>0;){const t=this.notificationQueue.shift();await this.displayNotification(t),await new Promise(t=>setTimeout(t,100))}this.isProcessingNotifications=!1}}async displayNotification(e){let n=document.getElementById("repo-manager-notification-container");if(!n&&(n=this.createNotificationContainer(),!n))return void setTimeout(()=>{this.displayNotification(e)},100);const i=document.createElement("div");i.className=`repo-manager-notification repo-manager-notification-${e.type}`,i.dataset.notificationId=e.id,e.data.notificationKey&&(i.dataset.notificationKey=e.data.notificationKey);let o='\n                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                <g><path stroke="var(--repo-manager-success)" d="M 9 19 C 5.283 20.115 3.005 19.703 2.068 17.054 C 1.848 16.432 1.085 16.283 0.572 16.155 M 16.558 22.159 L 16 18.13 C 16.076 17.165 15.465 15.854 14.792 15.159 C 17.932 14.809 23.456 15.349 21.5 8.52 C 21.116 7.178 20.963 5.781 20 4.77 C 20.456 3.549 20.853 1.609 20.339 0.411 C 20.339 0.411 18.73 0.65 16 2.48 C 13.708 1.859 11.292 1.859 9 2.48 C 6.27 0.65 4.768 0.464 4.768 0.464 C 4.254 1.662 4.544 3.549 5 4.77 C 4.03 5.789 3.716 7.16 3.5 8.55 C 2.522 14.85 7.019 14.692 10.159 15.082 C 9.494 15.77 8.933 17.176 9 18.13 L 9 22" style="stroke-linecap: round; stroke-linejoin: round; stroke-width: 1.80018px; fill: none;"></path></g>\n                </svg>\n            ';e.data.gravatar_url?o=`<img src="${e.data.gravatar_url}" alt="Avatar" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"><svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: none;"><path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>`:e.data.author_email&&(o=`<img src="${this.getGravatarUrl(e.data.author_email)}" alt="Avatar" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"><svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: none;"><path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>`),e.data.isStatusNotification&&(o=e.data.gravatar_url?`<img src="${e.data.gravatar_url}" alt="Avatar" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: none;"><path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M2 17L12 22L22 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M2 12L12 17L22 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>`:e.data.author_email?`<img src="${this.getGravatarUrl(e.data.author_email)}" alt="Avatar" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: none;"><path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M2 17L12 22L22 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/><path d="M2 12L12 17L22 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>`:'\n                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            <path d="M2 17L12 22L22 17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            <path d="M2 12L12 17L22 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                        </svg>\n                    ');let a=e.message;if(e.data.isStatusNotification&&e.data.latest_commit){const t=e.message.split("\n");if(t.length>1){const e=t[0],n=t.slice(1).join("\n");a=`\n                        <div class="repo-manager-notification-main-message">${this.escapeHtml(e)}</div>\n                        <div class="repo-manager-notification-commit-info">${this.escapeHtml(n)}</div>\n                    `}}else a=this.escapeHtml(e.message);if(i.innerHTML=`\n                <div class="repo-manager-notification-avatar">\n                    ${o}\n                </div>\n                <div class="repo-manager-notification-content">\n                    <div class="repo-manager-notification-title">\n                        ${this.escapeHtml(e.data.author||(e.data.isStatusNotification?t("Branch Status","repo-manager"):t("Git Update","repo-manager")))}\n                    </div>\n                    <div class="repo-manager-notification-message">\n                        ${a}\n                    </div>\n                    <div class="repo-manager-notification-meta">\n                        ${e.data.repo_name?`<span class="repo-manager-notification-repo">${this.escapeHtml(e.data.repo_name)}</span>`:""}\n                        ${e.data.branch?`<span class="repo-manager-notification-branch">${this.escapeHtml(e.data.branch)}</span>`:""}\n                        ${e.data.status?`<span class="repo-manager-notification-status repo-manager-notification-status-${e.data.status}">${this.escapeHtml(e.data.status)}</span>`:""}\n                        ${e.data.behind&&e.data.behind>0?`<span class="repo-manager-notification-count repo-manager-notification-count-behind">${e.data.behind} ${1===e.data.behind?t("commit","repo-manager"):t("commits","repo-manager")} ${t("behind","repo-manager")}</span>`:""}\n                        ${e.data.ahead&&e.data.ahead>0?`<span class="repo-manager-notification-count repo-manager-notification-count-ahead">${e.data.ahead} ${1===e.data.ahead?t("commit","repo-manager"):t("commits","repo-manager")} ${t("ahead","repo-manager")}</span>`:""}\n                    </div>\n                    ${e.data.isStatusNotification&&e.data.repo_id?`<div class="repo-manager-notification-actions">\n                                ${"behind"===e.data.status||"diverged"===e.data.status?`<button class="repo-manager-notification-btn repo-manager-notification-btn-pull" data-repo-id="${e.data.repo_id}" title="${t("Pull changes","repo-manager")}">\n                                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                                <path d="M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                                <polyline points="7,10 12,15 17,10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                                <line x1="12" y1="15" x2="12" y2="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                            </svg>\n                                            ${t("Pull","repo-manager")}\n                                        </button>`:""}\n                                ${"ahead"===e.data.status||"diverged"===e.data.status?`<button class="repo-manager-notification-btn repo-manager-notification-btn-push" data-repo-id="${e.data.repo_id}" title="${t("Push changes","repo-manager")}">\n                                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                                <path d="M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                                <polyline points="17,8 12,3 7,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                                <line x1="12" y1="3" x2="12" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                            </svg>\n                                            ${t("Push","repo-manager")}\n                                        </button>`:""}\n                            </div>`:""}\n                </div>\n                <button class="repo-manager-notification-close" aria-label="${t("Close notification","repo-manager")}">\n                    <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                        <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                    </svg>\n                </button>\n            `,this.setupCardStacking(i,n),n.appendChild(i),this.updateNotificationStacking(n),e.data.isStatusNotification&&e.data.repo_id){const t=i.querySelector(".repo-manager-notification-btn-pull"),n=i.querySelector(".repo-manager-notification-btn-push");t&&t.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.handleNotificationPull(e.data.repo_id,i)}),n&&n.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.handleNotificationPush(e.data.repo_id,i)})}e.data.isStatusNotification||setTimeout(()=>{this.removeNotification(i)},8e3)}setupCardStacking(t,e){t.addEventListener("click",n=>{n.target.closest(".repo-manager-notification-close")||n.target.closest(".repo-manager-notification-btn")||e&&e.lastElementChild===t||(t.style.transform="scale(0.98)",setTimeout(()=>{t.style.transform="",this.bringNotificationToFront(t,e)},100))}),t.style.cursor="pointer"}bringNotificationToFront(t,e){const n=t.style.transform,i=t.style.opacity;t.parentNode&&t.parentNode.removeChild(t),e.appendChild(t),t.style.transform=n,t.style.opacity=i,t.offsetHeight,t.classList.add("processing"),t.style.animation="cardBringToFront 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94)",setTimeout(()=>{t.style.animation="",t.classList.remove("processing"),this.updateNotificationStacking(e)},500)}updateNotificationStacking(t){const e=t.querySelectorAll(".repo-manager-notification"),n="rtl"===document.documentElement.dir;e.forEach((t,i)=>{const o=i===e.length-1;if(i>=e.length-5&&!o){const o=e.length-i-1,a=0,s=n?25*o:-25*o,r=.95,c=1-.15*o;t.style.setProperty("--stack-offset-x",`${s}px`),t.style.setProperty("--stack-offset-y",`${a}px`),t.style.setProperty("--stack-opacity",c.toString()),t.style.transform=`translate(${s}px, ${a}px) scale(${r})`,t.style.opacity=c,t.style.zIndex=1e4-o,t.style.pointerEvents="auto",t.classList.add("repo-manager-notification-stacked")}else o?(t.style.removeProperty("--stack-offset-x"),t.style.removeProperty("--stack-offset-y"),t.style.removeProperty("--stack-opacity"),t.style.transform="translate(0, 0) scale(0.95)",t.style.opacity="1",t.style.zIndex=10005,t.style.pointerEvents="auto",t.classList.remove("repo-manager-notification-stacked")):(t.style.removeProperty("--stack-offset-x"),t.style.removeProperty("--stack-offset-y"),t.style.removeProperty("--stack-opacity"),t.style.transform="translate(0, -100px) scale(0.8)",t.style.opacity="0",t.style.zIndex="10000",t.style.pointerEvents="none",t.classList.add("repo-manager-notification-hidden"))})}removeNotification(t){if(t&&t.parentNode){const e=t.dataset.notificationKey;if(e&&(e.startsWith("status-")||e.startsWith("background-status-")))if(this.shownStatusNotifications.delete(e),e.includes("::")){const t=e.split("::");if(4===t.length){const e=`${t[2]}:${t[3]}`;this.shownStatusNotifications.delete(e)}}else if(e.startsWith("background-status-")){const t=e.substring(18),n=t.lastIndexOf("-");if(-1!==n){const e=t.substring(n+1),i=t.substring(0,n),o=i.indexOf("-");if(-1!==o){const t=`${i.substring(o+1)}:${e}`;this.shownStatusNotifications.delete(t)}}}else if(e.startsWith("status-")){const n=e.substring(7),i=n.lastIndexOf("-");if(-1!==i){const e=n.substring(i+1),o=t.querySelector(".repo-manager-notification-branch");if(o){const t=`${o.textContent}:${e}`;this.shownStatusNotifications.delete(t)}}}const n=t.parentNode;t.style.animation="notificationSlideOut 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards",setTimeout(()=>{t.parentNode&&(t.parentNode.removeChild(t),n&&this.updateNotificationStacking(n))},400)}}getGravatarUrl(t,e=32){return`https://www.gravatar.com/avatar/${this.md5(t.toLowerCase().trim())}?s=${e}&d=mp`}md5(t){function e(t,e){let n=t[0],r=t[1],l=t[2],d=t[3];n=i(n,r,l,d,e[0],7,-680876936),d=i(d,n,r,l,e[1],12,-389564586),l=i(l,d,n,r,e[2],17,606105819),r=i(r,l,d,n,e[3],22,-1044525330),n=i(n,r,l,d,e[4],7,-176418897),d=i(d,n,r,l,e[5],12,1200080426),l=i(l,d,n,r,e[6],17,-1473231341),r=i(r,l,d,n,e[7],22,-45705983),n=i(n,r,l,d,e[8],7,1770035416),d=i(d,n,r,l,e[9],12,-1958414417),l=i(l,d,n,r,e[10],17,-42063),r=i(r,l,d,n,e[11],22,-1990404162),n=i(n,r,l,d,e[12],7,1804603682),d=i(d,n,r,l,e[13],12,-40341101),l=i(l,d,n,r,e[14],17,-1502002290),r=i(r,l,d,n,e[15],22,1236535329),n=o(n,r,l,d,e[1],5,-165796510),d=o(d,n,r,l,e[6],9,-1069501632),l=o(l,d,n,r,e[11],14,643717713),r=o(r,l,d,n,e[0],20,-373897302),n=o(n,r,l,d,e[5],5,-701558691),d=o(d,n,r,l,e[10],9,38016083),l=o(l,d,n,r,e[15],14,-660478335),r=o(r,l,d,n,e[4],20,-405537848),n=o(n,r,l,d,e[9],5,568446438),d=o(d,n,r,l,e[14],9,-1019803690),l=o(l,d,n,r,e[3],14,-187363961),r=o(r,l,d,n,e[8],20,1163531501),n=o(n,r,l,d,e[13],5,-1444681467),d=o(d,n,r,l,e[2],9,-51403784),l=o(l,d,n,r,e[7],14,1735328473),r=o(r,l,d,n,e[12],20,-1926607734),n=a(n,r,l,d,e[5],4,-378558),d=a(d,n,r,l,e[8],11,-2022574463),l=a(l,d,n,r,e[11],16,1839030562),r=a(r,l,d,n,e[14],23,-35309556),n=a(n,r,l,d,e[1],4,-1530992060),d=a(d,n,r,l,e[4],11,1272893353),l=a(l,d,n,r,e[7],16,-155497632),r=a(r,l,d,n,e[10],23,-1094730640),n=a(n,r,l,d,e[13],4,681279174),d=a(d,n,r,l,e[0],11,-358537222),l=a(l,d,n,r,e[3],16,-722521979),r=a(r,l,d,n,e[6],23,76029189),n=a(n,r,l,d,e[9],4,-640364487),d=a(d,n,r,l,e[12],11,-421815835),l=a(l,d,n,r,e[15],16,530742520),r=a(r,l,d,n,e[2],23,-995338651),n=s(n,r,l,d,e[0],6,-198630844),d=s(d,n,r,l,e[7],10,1126891415),l=s(l,d,n,r,e[14],15,-1416354905),r=s(r,l,d,n,e[5],21,-57434055),n=s(n,r,l,d,e[12],6,1700485571),d=s(d,n,r,l,e[3],10,-1894986606),l=s(l,d,n,r,e[10],15,-1051523),r=s(r,l,d,n,e[1],21,-2054922799),n=s(n,r,l,d,e[8],6,1873313359),d=s(d,n,r,l,e[15],10,-30611744),l=s(l,d,n,r,e[6],15,-1560198380),r=s(r,l,d,n,e[13],21,1309151649),n=s(n,r,l,d,e[4],6,-145523070),d=s(d,n,r,l,e[11],10,-1120210379),l=s(l,d,n,r,e[2],15,718787259),r=s(r,l,d,n,e[9],21,-343485551),t[0]=c(n,t[0]),t[1]=c(r,t[1]),t[2]=c(l,t[2]),t[3]=c(d,t[3])}function n(t,e,n,i,o,a){return e=c(c(e,t),c(i,a)),c(e<<o|e>>>32-o,n)}function i(t,e,i,o,a,s,r){return n(e&i|~e&o,t,e,a,s,r)}function o(t,e,i,o,a,s,r){return n(e&o|i&~o,t,e,a,s,r)}function a(t,e,i,o,a,s,r){return n(e^i^o,t,e,a,s,r)}function s(t,e,i,o,a,s,r){return n(i^(e|~o),t,e,a,s,r)}function r(t){const e=[];for(let n=0;n<64;n+=4)e[n>>2]=t.charCodeAt(n)+(t.charCodeAt(n+1)<<8)+(t.charCodeAt(n+2)<<16)+(t.charCodeAt(n+3)<<24);return e}function c(t,e){return t+e&4294967295}const l="0123456789abcdef".split("");function d(t){let e="",n=0;for(;n<4;n++)e+=l[t>>8*n+4&15]+l[t>>8*n&15];return e}return function(t){let e;for(e=0;e<t.length;e++)t[e]=d(t[e]);return t.join("")}(function(t){const n=t.length,i=[1732584193,-271733879,-1732584194,271733878];let o;for(o=64;o<=t.length;o+=64)e(i,r(t.substring(o-64,o)));t=t.substring(o-64);const a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(o=0;o<t.length;o++)a[o>>2]|=t.charCodeAt(o)<<(o%4<<3);if(a[o>>2]|=128<<(o%4<<3),o>55)for(e(i,a),o=0;o<16;o++)a[o]=0;return a[14]=8*n,e(i,a),i}(t))}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}async makeAjaxRequest(t,e={}){const n=new FormData;n.append("action",t);const i=this.getNonce(t);n.append("nonce",i),Object.keys(e).forEach(t=>{n.append(t,e[t])});const o="undefined"!=typeof WPGitManagerGlobal&&WPGitManagerGlobal?.ajaxurl?WPGitManagerGlobal.ajaxurl:"undefined"!=typeof ajaxurl?ajaxurl:null;if(!o)throw new Error("AJAX URL not available. Please ensure the plugin is properly configured.");const a=await fetch(o,{method:"POST",credentials:"same-origin",body:n});if(!a.ok){const t=await a.text();throw new Error(`HTTP error! status: ${a.status} - ${t}`)}return await a.json()}getNonce(t){return"undefined"!=typeof WPGitManagerGlobal&&WPGitManagerGlobal?.action_nonces?.[t]||"undefined"!=typeof WPGitManagerGlobal&&WPGitManagerGlobal?.nonce||"undefined"!=typeof gitManagerAjax&&gitManagerAjax?.action_nonces?.[t]||"undefined"!=typeof gitManagerAjax&&gitManagerAjax?.nonce||void 0!==window.gitManagerNonce&&window.gitManagerNonce?.nonce||""}startPolling(){setInterval(()=>{document.hidden||this.checkAllRepositoriesForUpdates()},288e5),setInterval(()=>{this.cleanupExpiredDismissals()},3e5),setTimeout(()=>{this.isInitializing=!1,this.checkAllRepositoriesForUpdates()},1e3),document.addEventListener("visibilitychange",()=>{document.hidden||this.checkAllRepositoriesForUpdates()})}clearAllBackgroundStatusNotifications(){document.querySelectorAll(".repo-manager-notification").forEach(t=>{const e=t.dataset.notificationKey;e&&(e.startsWith("background-status-")||e.startsWith("background-status::"))&&this.removeNotification(t)})}async checkAllRepositoriesForUpdates(){if(0!==this.repositories.length&&!this.isInitializing)try{const t=await this.makeAjaxRequest("git_manager_bulk_repo_status",{use_cache:"1"});if(t.success&&t.data)for(const e in t.data){const n=t.data[e],i=this.repositories.find(t=>t.id===e);i&&(n.status_error||this.handleRepositoryStatusCheck(i,n.status,n.latest_commit),n.commit_error||this.handleRepositoryUpdate(i,n.latest_commit))}}catch(t){}}async checkRepositoryForUpdates(t){try{const e=await this.makeAjaxRequest("git_manager_latest_commit",{id:t.id});e.success&&e.data&&this.handleRepositoryUpdate(t,e.data)}catch(t){}}async checkRepositoryStatus(t){try{const e=await this.makeAjaxRequest("git_manager_bulk_repo_status",{});if(e.success&&e.data&&e.data[t.id]){const n=e.data[t.id],i=n.latest_commit?{hash:n.latest_commit.split("|")[0],message:n.latest_commit.split("|")[1],author:n.latest_commit.split("|")[2],time:n.latest_commit.split("|")[3]}:null;this.handleRepositoryStatusCheck(t,n,i)}}catch(t){}}handleRepositoryStatusCheck(e,n,i=null){if(i&&"string"==typeof i){const t=i.split("|");i={hash:t[0],message:t[1],author:t[2],date:t[3]}}let o=0,a=0,s=!1,r="";"string"==typeof n?n.split("\n").forEach(t=>{if((t=t.trim()).startsWith("##")){if(t.includes("behind")){const e=t.match(/behind (\d+)/);e&&(o=parseInt(e[1]))}if(t.includes("ahead")){const e=t.match(/ahead (\d+)/);e&&(a=parseInt(e[1]))}const e=t.match(/## ([^.]*)/);e&&(r=e[1])}else t&&(s=!0)}):"object"==typeof n&&(o=n.behind||0,a=n.ahead||0,s=n.hasChanges||!1,r=n.currentBranch||"");let c="clean",l="",d="info";if(o>0&&a>0?(c="diverged",l=`${e.name}: ${t("Branch has diverged from remote. Manual merge needed.","repo-manager")}`,d="error"):o>0?(c="behind",l=`${e.name}: ${t("Branch is behind remote. Pull needed.","repo-manager")}`,d="warning"):a>0&&(c="ahead",l=`${e.name}: ${t("Branch is ahead of remote. Push needed.","repo-manager")}`,d="info"),"clean"===c&&this.clearStatusNotification(e.id),("behind"===c||"diverged"===c||"ahead"===c)&&l){const n=`background-status::${e.id}::${r}::${c}`,s=`status-${e.id}-${r}-${c}`,h=`${r}:${c}`;if(!this.shownStatusNotifications.has(n)){if(this.shownStatusNotifications.has(s))return;if(this.shouldDismissNotification(r,c))return;if(this.isSimilarNotificationShown(r,c))return;let p=l;if(o>0&&(p+=` (${o} ${t(1===o?"commit":"commits","repo-manager")} ${t("behind","repo-manager")})`),a>0&&(p+=` (${a} ${t(1===a?"commit":"commits","repo-manager")} ${t("ahead","repo-manager")})`),i&&(i.author_name||i.author)){const e=i.author_name||i.author;p+=`\n${t("Latest commit:","repo-manager")} ${e}: ${i.subject}`}if(!this.areNotificationsEnabled())return;this.showNotification(p,d,{repo_name:e.name,repo_id:e.id,branch:r,status:c,isStatusNotification:!0,notificationKey:n,isBackgroundCheck:!0,author:i?i.author_name:null,author_email:i?i.author_email:null,gravatar_url:i?i.gravatar_url:null,has_avatar:!!i&&i.has_avatar,behind:o,ahead:a,latest_commit:i}),this.shownStatusNotifications.add(n),this.shownStatusNotifications.add(h)}}this.currentRepo&&this.currentRepo.id===e.id&&this.updateStatusIndicator(n)}handleRepositoryUpdate(t,e){if(!e)return;let n="";"string"==typeof e?n=e.split(" ")[0]:"object"==typeof e&&e.hash&&(n=e.hash),this.latestCommits[t.id]&&this.latestCommits[t.id],this.latestCommits[t.id]=n}formatUpdateMessage(e){return e.author_name&&e.subject?`${e.author_name}: ${e.subject}`:e.author&&e.subject?`${e.author}: ${e.subject}`:t("New commits detected on remote!","repo-manager")}async handleNotificationPull(e,n){try{const i=n.querySelector(".repo-manager-notification-btn-pull");i&&(i.disabled=!0,i.innerHTML=`\n                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="animate-spin"><path d="M12 2v4"/><path d="m16.2 7.8 2.9-2.9"/><path d="M18 12h4"/><path d="m16.2 16.2 2.9 2.9"/><path d="M12 18v4"/><path d="m4.9 19.1 2.9-2.9"/><path d="M2 12h4"/><path d="m4.9 4.9 2.9 2.9"/></svg>\n                        ${t("Pulling...","repo-manager")}\n                    `);const o=await this.makeAjaxRequest("git_manager_pull",{id:e});o.success?(this.showSuccess(`${t("Repository pulled successfully","repo-manager")}`),this.clearStatusNotification(e),this.removeNotification(n)):(this.showError(`${o.data?.message||o.data||t("Pull failed","repo-manager")}`),i&&(i.disabled=!1,i.innerHTML=`\n                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                <path d="M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                <polyline points="7,10 12,15 17,10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                <line x1="12" y1="15" x2="12" y2="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            </svg>\n                            ${t("Pull","repo-manager")}\n                        `))}catch(e){this.showError(t("Pull operation failed","repo-manager"));const i=n.querySelector(".repo-manager-notification-btn-pull");i&&(i.disabled=!1,i.innerHTML=`\n                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            <polyline points="7,10 12,15 17,10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            <line x1="12" y1="15" x2="12" y2="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                        </svg>\n                        ${t("Pull","repo-manager")}\n                    `)}}async handleNotificationPush(e,n){try{const i=n.querySelector(".repo-manager-notification-btn-push");i&&(i.disabled=!0,i.innerHTML=`\n                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="animate-spin"><path d="M12 2v4"/><path d="m16.2 7.8 2.9-2.9"/><path d="M18 12h4"/><path d="m16.2 16.2 2.9 2.9"/><path d="M12 18v4"/><path d="m4.9 19.1 2.9-2.9"/><path d="M2 12h4"/><path d="m4.9 4.9 2.9 2.9"/></svg>\n                        ${t("Pushing...","repo-manager")}\n                    `);const o=await this.makeAjaxRequest("git_manager_repo_push",{id:e});o.success?(this.showSuccess(`${t("Repository pushed successfully","repo-manager")}`),this.clearStatusNotification(e),this.removeNotification(n)):(this.showError(`${o.data?.message||o.data||t("Push failed","repo-manager")}`),i&&(i.disabled=!1,i.innerHTML=`\n                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                                <path d="M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                <polyline points="17,8 12,3 7,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                                <line x1="12" y1="3" x2="12" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            </svg>\n                            ${t("Push","repo-manager")}\n                        `))}catch(e){this.showError(t("Push operation failed","repo-manager"));const i=n.querySelector(".repo-manager-notification-btn-push");i&&(i.disabled=!1,i.innerHTML=`\n                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n                            <path d="M21 15V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            <polyline points="17,8 12,3 7,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                            <line x1="12" y1="3" x2="12" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n                        </svg>\n                        ${t("Push","repo-manager")}\n                    `)}}loadNotificationDismissals(){try{const t=localStorage.getItem("repo-manager-notification-dismissals");return t?JSON.parse(t):{}}catch(t){return{}}}saveNotificationDismissals(){try{const t=JSON.stringify(this.notificationDismissals);localStorage.setItem("repo-manager-notification-dismissals",t)}catch(t){}}shouldDismissNotification(t,e){const n=`${(t||"").trim().toLowerCase()}:${(e||"").trim().toLowerCase()}`;if(this.sessionDismissals.has(n))return!0;const i=this.notificationDismissals[n];if(!i)return!1;const o=Math.floor(Date.now()/1e3);return i.ignoreUntil===1/0||i.ignoreUntil>o||(delete this.notificationDismissals[n],this.saveNotificationDismissals(),!1)}showDismissalOptionsPopup(e,n,i){const o=document.createElement("div");o.className="repo-manager-dismissal-overlay",o.style.cssText="\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100%;\n                height: 100%;\n                background: rgba(0, 0, 0, 0.5);\n                z-index: 9999999;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            ";const a=document.createElement("div");a.className="repo-manager-dismissal-popup",a.style.cssText="\n                background: white;\n                border-radius: 8px;\n                padding: 20px;\n                max-width: 400px;\n                width: 90%;\n                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n                animation: slideInDown 0.3s ease;\n            ";const s=document.createElement("style");s.textContent="\n                @keyframes slideInDown {\n                    from {\n                        opacity: 0;\n                        transform: translateY(-20px);\n                    }\n                    to {\n                        opacity: 1;\n                        transform: translateY(0);\n                    }\n                }\n                @keyframes fadeOut {\n                    from {\n                        opacity: 1;\n                    }\n                    to {\n                        opacity: 0;\n                    }\n                }\n            ",document.head.appendChild(s),a.innerHTML=`\n                <div style="margin-bottom: 15px;">\n                    <h3 style="margin: 0 0 10px 0; color: #333; font-size: 16px;">\n                        ${t("Notification Dismissal Options","repo-manager")}\n                    </h3>\n                    <p style="margin: 0; color: #666; font-size: 14px;">\n                        ${t("Choose how long to hide this notification:","repo-manager")}\n                    </p>\n                </div>\n                <div style="display: flex; flex-direction: column; gap: 8px;">\n                    <button class="repo-manager-dismissal-option" data-action="once" style="\n                        padding: 10px 15px;\n                        border: 1px solid #ddd;\n                        border-radius: 6px;\n                        background: white;\n                        cursor: pointer;\n                        text-align: left;\n                        transition: all 0.2s;\n                        font-size: 14px;\n                    ">\n                        <strong>${t("Hide just once","repo-manager")}</strong>\n                        <br><span style="color: #666; font-size: 12px;">${t("Hide until you refresh the page","repo-manager")}</span>\n                    </button>\n                    <button class="repo-manager-dismissal-option" data-action="permanent" style="\n                        padding: 10px 15px;\n                        border: 1px solid #ddd;\n                        border-radius: 6px;\n                        background: white;\n                        cursor: pointer;\n                        text-align: left;\n                        transition: all 0.2s;\n                        font-size: 14px;\n                    ">\n                        <strong>${t("Don't show for this status again","repo-manager")}</strong>\n                        <br><span style="color: #666; font-size: 12px;">${t("Permanently hide notifications for this branch and status","repo-manager")}</span>\n                    </button>\n                    <button class="repo-manager-dismissal-option" data-action="10min" style="\n                        padding: 10px 15px;\n                        border: 1px solid #ddd;\n                        border-radius: 6px;\n                        background: white;\n                        cursor: pointer;\n                        text-align: left;\n                        transition: all 0.2s;\n                        font-size: 14px;\n                    ">\n                        <strong>${t("Hide for 10 minutes","repo-manager")}</strong>\n                        <br><span style="color: #666; font-size: 12px;">${t("Notifications will reappear after 10 minutes","repo-manager")}</span>\n                    </button>\n                    <button class="repo-manager-dismissal-option" data-action="1day" style="\n                        padding: 10px 15px;\n                        border: 1px solid #ddd;\n                        border-radius: 6px;\n                        background: white;\n                        cursor: pointer;\n                        text-align: left;\n                        transition: all 0.2s;\n                        font-size: 14px;\n                    ">\n                        <strong>${t("Hide for 1 day","repo-manager")}</strong>\n                        <br><span style="color: #666; font-size: 12px;">${t("Notifications will reappear after 24 hours","repo-manager")}</span>\n                    </button>\n                    <button class="repo-manager-dismissal-cancel" style="\n                        padding: 10px 15px;\n                        border: 1px solid #ddd;\n                        border-radius: 6px;\n                        background: #f8f9fa;\n                        cursor: pointer;\n                        text-align: center;\n                        transition: all 0.2s;\n                        font-size: 14px;\n                        margin-top: 10px;\n                    ">\n                        ${t("Cancel","repo-manager")}\n                    </button>\n                </div>\n            `;const r=a.querySelectorAll(".repo-manager-dismissal-option");r.forEach(t=>{t.addEventListener("mouseenter",()=>{t.style.backgroundColor="#f8f9fa",t.style.borderColor="#007cba"}),t.addEventListener("mouseleave",()=>{t.style.backgroundColor="white",t.style.borderColor="#ddd"})}),r.forEach(t=>{t.addEventListener("click",()=>{const a=t.dataset.action;this.handleDismissalAction(a,n,i,e),this.closeDismissalPopup(o)})}),a.querySelector(".repo-manager-dismissal-cancel").addEventListener("click",()=>{this.closeDismissalPopup(o)}),o.addEventListener("click",t=>{t.target===o&&this.closeDismissalPopup(o)});const c=t=>{"Escape"===t.key&&(this.closeDismissalPopup(o),document.removeEventListener("keydown",c))};document.addEventListener("keydown",c),o.appendChild(a),document.body.appendChild(o),setTimeout(()=>{const t=a.querySelector(".repo-manager-dismissal-option");t&&t.focus()},100)}handleDismissalAction(e,n,i,o){const a=`${(n||"").trim().toLowerCase()}:${(i||"").trim().toLowerCase()}`,s=Math.floor(Date.now()/1e3);let r,c;switch(e){case"once":return this.sessionDismissals.add(a),this.removeNotification(o),void this.showNotification(t("Notification hidden until refresh","repo-manager"),"info",{repo_name:o.querySelector(".repo-manager-notification-repo")?.textContent,branch:n});case"permanent":r=1/0;break;case"10min":r=s+600;break;case"1day":r=s+86400;break;default:return}switch(this.notificationDismissals[a]={ignoreUntil:r,dismissedAt:s,action:e},this.saveNotificationDismissals(),this.removeNotification(o),e){case"permanent":c=t("Notification dismissed permanently","repo-manager");break;case"10min":c=t("Notification hidden for 10 minutes","repo-manager");break;case"1day":c=t("Notification hidden for 1 day","repo-manager")}this.showNotification(c,"info",{repo_name:o.querySelector(".repo-manager-notification-repo")?.textContent,branch:n})}closeDismissalPopup(t){t&&t.parentNode&&(t.style.animation="fadeOut 0.2s ease forwards",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},200))}cleanupExpiredDismissals(){const t=Math.floor(Date.now()/1e3);let e=!1;Object.keys(this.notificationDismissals).forEach(n=>{const i=this.notificationDismissals[n];i.ignoreUntil!==1/0&&i.ignoreUntil<=t&&(delete this.notificationDismissals[n],e=!0)}),e&&this.saveNotificationDismissals()}getDismissalStats(){const t=Math.floor(Date.now()/1e3),e={total:Object.keys(this.notificationDismissals).length,permanent:0,temporary:0,expired:0};return Object.values(this.notificationDismissals).forEach(n=>{n.ignoreUntil===1/0?e.permanent++:n.ignoreUntil>t?e.temporary++:e.expired++}),e}isSimilarNotificationShown(t,e){const n=`${t}:${e}`;if(this.shownStatusNotifications.has(n))return!0;for(const n of this.shownStatusNotifications)if(n.includes(t)&&n.includes(e))return!0;return!1}getActiveNotifications(){const t=document.querySelectorAll(".repo-manager-notification"),e=[];return t.forEach(t=>{const n=t.dataset.notificationKey,i=t.querySelector(".repo-manager-notification-branch"),o=i?i.textContent:"unknown";e.push({element:t,key:n,branch:o,isShown:this.shownStatusNotifications.has(n)})}),e}createNotificationContainer(){if(!document.getElementById("repo-manager-floating-widget"))return null;const t=document.createElement("div");return t.id="repo-manager-notification-container",t.className="repo-manager-notification-container",t.style.cssText="\n                position: fixed;\n                top: 20px;\n                right: 20px;\n                z-index: 999999;\n                max-width: 400px;\n                pointer-events: none;\n            ",document.body.appendChild(t),t}areNotificationsEnabled(){const t=document.getElementById("repo-manager-floating-widget");return!t||"1"===t.dataset.notificationsEnabled}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new e}):new e}();