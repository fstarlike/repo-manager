{"version":3,"file":"rtl-support.min.js","mappingssBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://repo-manager/./src/Assets/js/rtl-support.js"],"sourcesContent":["/**\r\n * Repo Manager â€” RTL Support (modernized)\r\n *\r\n * Strategy: let CSS handle almost everything. This script only:\r\n * - Detects RTL from WP/env reliably\r\n * - Sets `dir` and helper classes on the main wrapper\r\n * - Mirrors a few dynamic UI bits that CSS cannot infer (directory selector, troubleshooting)\r\n * - Observes DOM changes and reapplies minimal adjustments\r\n */\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var currentLocale = \"en\";\r\n    var currentRTL = false;\r\n\r\n    function getLocale() {\r\n        try {\r\n            if (\r\n                typeof gitManagerLanguage !== \"undefined\" &&\r\n                gitManagerLanguage.locale\r\n            ) {\r\n                return gitManagerLanguage.locale;\r\n            }\r\n        } catch (e) {}\r\n\r\n        try {\r\n            if (typeof wp !== \"undefined\" && wp.locale) {\r\n                return wp.locale;\r\n            }\r\n        } catch (e) {}\r\n\r\n        return document.documentElement.lang || \"en\";\r\n    }\r\n\r\n    function isWordPressRTL() {\r\n        try {\r\n            if (\r\n                typeof gitManagerLanguage !== \"undefined\" &&\r\n                typeof gitManagerLanguage.rtl !== \"undefined\"\r\n            ) {\r\n                return !!gitManagerLanguage.rtl;\r\n            }\r\n        } catch (e) {}\r\n\r\n        // Fallback to document\r\n        return (document.documentElement.dir || \"\").toLowerCase() === \"rtl\";\r\n    }\r\n\r\n    function isLanguageRTL(locale) {\r\n        var rtlLanguages = [\r\n            \"ar\",\r\n            \"he\",\r\n            \"fa\",\r\n            \"ur\",\r\n            \"ps\",\r\n            \"sd\",\r\n            \"yi\",\r\n            \"ku\",\r\n            \"dv\",\r\n            \"ckb\",\r\n        ];\r\n        var lc = (locale || \"en\").toLowerCase();\r\n        return rtlLanguages.some(function (code) {\r\n            return lc.indexOf(code) === 0;\r\n        });\r\n    }\r\n\r\n    function getWrapper() {\r\n        return document.querySelector(\".repo-manager-wrap\");\r\n    }\r\n\r\n    function applyBaseAttributes(wrapper, rtl) {\r\n        if (!wrapper) return;\r\n        wrapper.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\r\n        wrapper.classList.toggle(\"repo-manager-rtl\", rtl);\r\n        document.body.classList.toggle(\"repo-manager-rtl-active\", rtl);\r\n    }\r\n\r\n    // Minimal JS adjustments that CSS alone can't infer\r\n    function adjustDirectorySelector(wrapper, rtl) {\r\n        if (!wrapper || !rtl) return;\r\n\r\n        var searchContainer = wrapper.querySelector(\".new-search-container\");\r\n        if (searchContainer) {\r\n            searchContainer.style.textAlign = \"right\";\r\n        }\r\n\r\n        var searchWrapper = wrapper.querySelector(\".new-search-wrapper\");\r\n        if (searchWrapper) {\r\n            if (getComputedStyle(searchWrapper).flexDirection !== \"column\") {\r\n                searchWrapper.style.flexDirection = \"row-reverse\";\r\n            }\r\n        }\r\n\r\n        var searchIcon = wrapper.querySelector(\".new-search-icon\");\r\n        if (searchIcon) {\r\n            var cs = getComputedStyle(searchIcon);\r\n            if (cs.left !== \"auto\") {\r\n                searchIcon.style.right = cs.left;\r\n                searchIcon.style.left = \"auto\";\r\n            }\r\n        }\r\n\r\n        var searchClear = wrapper.querySelector(\".new-search-clear\");\r\n        if (searchClear) {\r\n            var cs2 = getComputedStyle(searchClear);\r\n            if (cs2.right !== \"auto\") {\r\n                searchClear.style.left = cs2.right;\r\n                searchClear.style.right = \"auto\";\r\n            }\r\n        }\r\n\r\n        var searchInput = wrapper.querySelector(\".new-search-input-enhanced\");\r\n        if (searchInput) {\r\n            var cs3 = getComputedStyle(searchInput);\r\n            if (cs3.paddingLeft !== \"0px\" || cs3.paddingRight !== \"0px\") {\r\n                searchInput.style.paddingLeft = cs3.paddingRight;\r\n                searchInput.style.paddingRight = cs3.paddingLeft;\r\n            }\r\n        }\r\n    }\r\n\r\n    function adjustTroubleshoot(wrapper, rtl) {\r\n        if (!wrapper || !rtl) return;\r\n\r\n        var title = wrapper.querySelector(\".troubleshoot-title\");\r\n        if (title && getComputedStyle(title).flexDirection !== \"column\") {\r\n            title.style.flexDirection = \"row-reverse\";\r\n        }\r\n\r\n        var progress = wrapper.querySelector(\".troubleshoot-progress\");\r\n        if (progress && getComputedStyle(progress).flexDirection !== \"column\") {\r\n            progress.style.flexDirection = \"row-reverse\";\r\n        }\r\n    }\r\n\r\n    function applyAdjustments() {\r\n        var wrapper = getWrapper();\r\n        if (!wrapper) return;\r\n\r\n        currentLocale = getLocale();\r\n        currentRTL = isWordPressRTL() || isLanguageRTL(currentLocale);\r\n\r\n        applyBaseAttributes(wrapper, currentRTL);\r\n        adjustDirectorySelector(wrapper, currentRTL);\r\n        adjustTroubleshoot(wrapper, currentRTL);\r\n    }\r\n\r\n    function observeDynamicContent() {\r\n        var obs = new MutationObserver(function (mutations) {\r\n            var needsReapply = false;\r\n            for (var i = 0; i < mutations.length; i++) {\r\n                var m = mutations[i];\r\n                if (\r\n                    m.type === \"childList\" &&\r\n                    m.addedNodes &&\r\n                    m.addedNodes.length\r\n                ) {\r\n                    for (var j = 0; j < m.addedNodes.length; j++) {\r\n                        var node = m.addedNodes[j];\r\n                        if (node.nodeType === 1 /* ELEMENT_NODE */) {\r\n                            if (\r\n                                node.classList &&\r\n                                node.classList.contains(\"repo-manager-wrap\")\r\n                            ) {\r\n                                needsReapply = true;\r\n                                break;\r\n                            }\r\n                            if (\r\n                                node.querySelector &&\r\n                                node.querySelector(\".repo-manager-wrap\")\r\n                            ) {\r\n                                needsReapply = true;\r\n                                break;\r\n                            }\r\n                            if (\r\n                                node.classList &&\r\n                                (node.classList.contains(\r\n                                    \"new-directory-selector-modal\"\r\n                                ) ||\r\n                                    node.classList.contains(\r\n                                        \"new-directory-browser\"\r\n                                    ) ||\r\n                                    node.classList.contains(\r\n                                        \"troubleshoot-container\"\r\n                                    ) ||\r\n                                    node.classList.contains(\r\n                                        \"troubleshoot-step\"\r\n                                    ))\r\n                            ) {\r\n                                needsReapply = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (needsReapply) break;\r\n            }\r\n\r\n            if (needsReapply) {\r\n                applyAdjustments();\r\n            }\r\n        });\r\n\r\n        obs.observe(document.body, { childList: true, subtree: true });\r\n    }\r\n\r\n    // Expose minimal backward-compatible API\r\n    function exposeAPI() {\r\n        try {\r\n            window.gitManagerRTL = {\r\n                isRTLActive: function () {\r\n                    return !!currentRTL;\r\n                },\r\n                getCurrentLanguage: function () {\r\n                    return currentLocale;\r\n                },\r\n                toggleRTL: function () {\r\n                    var wrapper = getWrapper();\r\n                    currentRTL = !currentRTL;\r\n                    applyBaseAttributes(wrapper, currentRTL);\r\n                    adjustDirectorySelector(wrapper, currentRTL);\r\n                    adjustTroubleshoot(wrapper, currentRTL);\r\n                },\r\n                setLanguage: function (lang) {\r\n                    if (typeof lang === \"string\" && lang) {\r\n                        currentLocale = lang;\r\n                    }\r\n                    // Recompute based on explicit locale + WP preference\r\n                    currentRTL =\r\n                        isWordPressRTL() || isLanguageRTL(currentLocale);\r\n                    var wrapper = getWrapper();\r\n                    applyBaseAttributes(wrapper, currentRTL);\r\n                    adjustDirectorySelector(wrapper, currentRTL);\r\n                    adjustTroubleshoot(wrapper, currentRTL);\r\n                },\r\n            };\r\n        } catch (e) {}\r\n    }\r\n\r\n    // Init\r\n    if (document.readyState === \"loading\") {\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n            applyAdjustments();\r\n            exposeAPI();\r\n            observeDynamicContent();\r\n            window.addEventListener(\"resize\", applyAdjustments);\r\n        });\r\n    } else {\r\n        applyAdjustments();\r\n        exposeAPI();\r\n        observeDynamicContent();\r\n        window.addEventListener(\"resize\", applyAdjustments);\r\n    }\r\n})();\r\n"],"names":[],"sourceRoot":""}